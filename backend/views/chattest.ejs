<!doctype html>
<html>

<head>
    <title>Socket.IO chat</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font: 13px Helvetica, Arial;
        }

        form {
            background: #000;
            padding: 3px;
            position: fixed;
            bottom: 0;
            width: 100%;
        }

        form input {
            border: 0;
            padding: 10px;
            width: 90%;
            margin-right: .5%;
        }

        form button {
            width: 9%;
            background: rgb(130, 224, 255);
            border: none;
            padding: 10px;
        }

        #messages {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }

        #messages li {
            padding: 5px 10px;
        }

        #messages li:nth-child(odd) {
            background: #eee;
        }
    </style>
</head>

<body>
    <ul id="messages"></ul>
    <form action="">
        <input id="m" autocomplete="off" /><button>Send</button>
    </form>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
    <script>
        $(function () {
            var socket = io();

            var user_idx = "4";
            var shelter_idx = 1;

            socket.on('message', function (_msg) {
                var message = JSON.parse(_msg);
                console.log(message);
                newMessage(0, message.message);
                // 여기서 없을 때 있을 때 구분해서 한다.
            });
            var message = {
                type: "user",
                idx: user_idx
            }
            socket.emit('participate', JSON.stringify(message)); // 들어왔다고 통보.



            $('form').submit(function (e) {
                var socektMessage = {
                    type: "0",
                    user_idx: user_idx,
                    shelter_idx: shelter_idx,
                    message: $('#m').val()
                }
                socket.emit('message', JSON.stringify(socektMessage));

                e.preventDefault(); // prevents page reloading
                $('#m').val('');
                return false;
            });
        });
    </script>
</body>

</html>