<!-- 발견장소 위치 모달-->
<div class="modal fade" id="map_modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" style="height:auto; width:auto;" role="document">
        <div class="modal-content" style="height:auto; width:auto;">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalTitle">발견위치정보 찾기</h5>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="exampleFormControlInput1">유기견 발견장소 검색</label>
                            <div class="input-group mb-3">
                                <input id="map_search_keyword" type="text" class="form-control"
                                    aria-label="Recipient's username" aria-describedby="basic-addon2">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-dark"
                                        onclick="searchSpotByKeyWord()">검색</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div id="discovered_spot_map" style="width:100%;height:350px;"></div>
                    </div>
                    <div class="col-md-12 mt-2" style="text-align: center;">
                        <button class="btn btn-primary" id="animal_register_btn_select_spot">위치 선택</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript"
    src="//dapi.kakao.com/v2/maps/sdk.js?appkey=7a116decd0d85fb13328c9f516f7baaa&libraries=services"></script>
<script>
    $('#map_search_keyword').keydown(function (e) {
        if (e.keyCode == 13) {
            searchSpotByKeyWord()
            return false;
        }
    })
    var mCaller;
    var mapObject;
    var mSelectedLatitudeAnimalRegister;
    var mSelectedLongitudeAnimalRegister;
    var mSelectedAddressAnimalRegister;
    $('#animal_register_btn_select_spot').on('click', function () {
        $('#' + mCaller + 'discovered_spot').val(mSelectedAddressAnimalRegister)
        $('#' + mCaller + 'latitude').val(String(mSelectedLatitudeAnimalRegister).substring(0, 9));
        $('#' + mCaller + 'longitude').val(String(mSelectedLongitudeAnimalRegister).substring(0, 9));
        $('#map_modal').modal('hide')
    })


    function searchSpotByKeyWord() {
        var ps = new daum.maps.services.Places();

        var keyword = document.getElementById('map_search_keyword').value;

        if (!keyword.replace(/^\s+|\s+$/g, '')) {
            alert('키워드를 입력해주세요!');
            return false;
        }

        // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다
        ps.keywordSearch(keyword, function (data, status, pagination) {
            if (status === daum.maps.services.Status.OK) {
                // 정상적으로 검색이 완료됐으면
                // 검색 목록과 마커를 표출합니다
                var bounds = new daum.maps.LatLngBounds();
                for (var i = 0; i < data.length; i++) {
                    var placePosition = new daum.maps.LatLng(data[i].y, data[i].x);
                    bounds.extend(placePosition);
                }
                mapObject.setBounds(bounds);

            } else if (status === daum.maps.services.Status.ZERO_RESULT) {

                alert('검색 결과가 존재하지 않습니다.');
                return;

            } else if (status === daum.maps.services.Status.ERROR) {
                alert('검색 결과 중 오류가 발생했습니다.');
                return;
            }
        });
    }



    /*
        무조건 아래 form-group이 들어가야하고

        input들의 id 앞부분과 위치찾기 함수 콜러 부분을 맞추어 주어야한다.



                           <div class="form-group">
                        <label for="exampleFormControlInput1">유기견 발견장소</label>
                        <div class="input-group mb-3">
                            <input id="register_animal_discovered_spot" type="text" name="discovered_spot"
                                class="form-control" aria-label="Recipient's username" aria-describedby="basic-addon2"
                                readonly>
                            <div class="input-group-append">
                                <button type="button" class="btn btn-dark"
                                    onclick="searchDiscoveredSpot('register_animal_')">위치
                                    찾기</button>
                            </div>
                        </div>
                        <input id="register_animal_latitude" type="text" name="latitude" style="display: none;">
                        <input id="register_animal_longitude" type="text" name="longitude" style="display: none;">
                    </div>
    */
    function searchDiscoveredSpot(_caller, _latitude, _longitude) {
        var latitude = _latitude == "" || _latitude == undefined ? 37.56631 : parseFloat(_latitude)
        var longitude = _longitude == "" || _longitude == undefined ? 126.97875 : parseFloat(_longitude)
        mCaller = _caller
        var geocoder = new daum.maps.services.Geocoder();// 주소-좌표변환 객체

        function searchAddrFromCoords(coords, callback) {
            // 좌표로 행정동 주소 정보를 요청합니다
            geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);
        }

        function searchDetailAddrFromCoords(coords, callback) {
            // 좌표로 법정동 상세 주소 정보를 요청합니다
            geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
        }
        $('#map_modal').modal('show');

        setTimeout(function () {
            var mapContainer = document.getElementById('discovered_spot_map'), // 지도를 표시할 div 
                mapOption = {
                    center: new daum.maps.LatLng(latitude, longitude), // 지도의 중심좌표
                    level: 5 // 지도의 확대 레벨
                };

            var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
            mapObject = map;
            infowindow = new daum.maps.InfoWindow({ zindex: 1 }); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다

            // 지도를 클릭한 위치에 표출할 마커입니다
            var marker = new daum.maps.Marker({
                // 지도 중심좌표에 마커를 생성합니다 
                position: map.getCenter()
            });
            marker.setMap(map);

            // 지도에 클릭 이벤트를 등록합니다
            // 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다
            daum.maps.event.addListener(map, 'click', function (mouseEvent) {
                searchDetailAddrFromCoords(mouseEvent.latLng, function (result, status) {
                    if (status === daum.maps.services.Status.OK) {
                        var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
                        detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';

                        var content = '<div style="padding:5px;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;">' +
                            '<span style="font-weight:bold;display:block;">법정동 주소정보</span>' +
                            detailAddr +
                            '</div>';

                        // 마커를 클릭한 위치에 표시합니다 
                        marker.setPosition(mouseEvent.latLng);
                        console.log(mouseEvent.latLng);
                        marker.setMap(map);

                        // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
                        infowindow.setContent(content);
                        infowindow.open(map, marker);

                        var latlng = mouseEvent.latLng;


                        var message = '클릭한 위치의 위도는 ' + latlng.getLat() + ' 이고, ';
                        message += '경도는 ' + latlng.getLng() + ' 입니다';
                        message += '주소는' + result[0].address.address_name

                        mSelectedAddressAnimalRegister = result[0].address.address_name;
                        mSelectedLatitudeAnimalRegister = latlng.getLat()
                        mSelectedLongitudeAnimalRegister = latlng.getLng()
                        console.log(message)
                    }
                });
                // 클릭한 위도, 경도 정보를 가져옵니다 

            });

            daum.maps.event.trigger(map, 'click', {
                latLng: map.getCenter()
            })
        }, 500)


    }


</script>